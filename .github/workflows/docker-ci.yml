name: Docker CI Pipeline
run-name: ${{ github.actor }} is running Docker CI Pipeline ðŸš€
on: [push]
jobs:
  docker-ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download 24hrs Old Logs
        uses: pawanbahuguna/action-logs/@v1.0.1
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
      - name: list files
        run: ls -lrt
        
      - name: list files in jobs-log
        run: ls -lrt jobs-log
        
      - name: view content
        run: cat $(ls jobs-log | head -n 1 | sed 's|^|jobs-log/|')

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Create Log Group and Log Stream
        run: |
          LOG_GROUP_NAME="GitHubActionsLogs"
          LOG_STREAM_NAME=$(date '+%Y-%m-%d-%H-%M-%S')

          # Create Log Group if it doesn't exist
          aws logs create-log-group --log-group-name "$LOG_GROUP_NAME" || true

          # Create Log Stream
          aws logs create-log-stream --log-group-name "$LOG_GROUP_NAME" --log-stream-name "$LOG_STREAM_NAME"

          # Find and ship log files from jobs-log directory
          for file in jobs-log/logs-*.txt; do
            echo "Shipping $file to CloudWatch"

            # Initialize the JSON array
            LOG_EVENTS=""

            while IFS= read -r line; do
              # Format each log line as a JSON object
              TIMESTAMP=$(date +%s%3N)  # Use current time in milliseconds
              LOG_EVENTS+="{\"timestamp\": $TIMESTAMP, \"message\": \"$line\"}\n"
            done < "$file"

            # If LOG_EVENTS is not empty, remove the trailing newline and wrap it in an array
            if [ -n "$LOG_EVENTS" ]; then
              LOG_EVENTS="[${LOG_EVENTS%\\n}]"
              echo "Uploading logs to CloudWatch"
              aws logs put-log-events \
                --log-group-name "$LOG_GROUP_NAME" \
                --log-stream-name "$LOG_STREAM_NAME" \
                --log-events "$LOG_EVENTS"
            fi
          done
                --log-events "$LOG_EVENTS"
            fi
          done
