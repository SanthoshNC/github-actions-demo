name: Docker CI Pipeline
run-name: ${{ github.actor }} is running Docker CI Pipeline ðŸš€
on: [push]
jobs:
  docker-ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download 24hrs Old Logs
        uses: pawanbahuguna/action-logs/@v1.0.1
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
      - name: list files
        run: ls -lrt
      - name: list files in jobs-log
        run: ls -lrt jobs-log

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Ship logs to CloudWatch
        run: |
          LOG_GROUP_NAME="GitHubActionsLogs"
          LOG_STREAM_NAME=$(date '+%Y-%m-%d-%H-%M-%S')

          # Create Log Group if it doesn't exist
          aws logs create-log-group --log-group-name $LOG_GROUP_NAME || true

          # Create Log Stream
          aws logs create-log-stream --log-group-name $LOG_GROUP_NAME --log-stream-name $LOG_STREAM_NAME

          # Find and ship log files
          for file in jobs-log/logs-*.txt; do
            echo "Shipping $file to CloudWatch"
            aws logs put-log-events \
              --log-group-name $LOG_GROUP_NAME \
              --log-stream-name $LOG_STREAM_NAME \
              --log-events file://<(jq -R -s -c '{ timestamp: (now | tonumber * 1000), message: . }' $file)
          done
