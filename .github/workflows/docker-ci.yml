name: Docker CI Pipeline
run-name: ${{ github.actor }} is running Docker CI Pipeline ðŸš€
on: [push]
jobs:
  docker-ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download 24hrs Old Logs
        uses: pawanbahuguna/action-logs/@v1.0.1
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
      - name: list files
        run: ls -lrt
        
      - name: list files in jobs-log
        run: ls -lrt jobs-log
        
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Convert TXT to JSON
        run: |
          mkdir -p job-logs-json
          for file in job-logs/*.txt; do
            filename=$(basename "$file" .txt)
            echo "{\"log\": \"$(tr '\n' '\\n' < "$file" | sed 's/"/\\"/g')\"}" > "job-logs-json/${filename}.json"
          done

      - name: Upload JSON to CloudWatch
        run: |
          log_group_name="GithubActionsLogGroup"
          current_date=$(date +%Y-%m-%d)
          log_stream_name="log-stream-$current_date"

          # Create log group if it does not exist
          aws logs create-log-group --log-group-name "$log_group_name" || true
          
          # Create log stream if it does not exist
          aws logs create-log-stream --log-group-name "$log_group_name" --log-stream-name "$log_stream_name" || true

          # Put logs into CloudWatch
          for file in job-logs-json/*.json; do
            log_events=$(cat "$file" | awk -v now=$(date +%s%3N) '{print "{\"timestamp\": \"" now "\", \"message\": \"" $0 "\"}"}')
            aws logs put-log-events \
              --log-group-name "$log_group_name" \
              --log-stream-name "$log_stream_name" \
              --log-events "$log_events"
          done
